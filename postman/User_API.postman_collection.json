{
	"info": {
		"name": "User API",
		"description": "User management endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "roleId",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Create User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@company.com\",\n  \"password\": \"SecurePassword123!\",\n  \"companyId\": \"507f1f77bcf86cd799439011\",\n  \"isActive\": true\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": ["{{baseUrl}}"],
					"path": ["user", "create"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 201) {",
							"    const response = pm.response.json();",
							"    pm.collectionVariables.set('userId', response._id);",
							"    pm.test('User created successfully', function () {",
							"        pm.expect(response.email).to.eql('john.doe@company.com');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Get All Users",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/all",
					"host": ["{{baseUrl}}"],
					"path": ["user", "all"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response is array', function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Get User by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/{{userId}}",
					"host": ["{{baseUrl}}"],
					"path": ["user", "{{userId}}"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('User has required fields', function () {",
							"    const user = pm.response.json();",
							"    pm.expect(user).to.have.property('firstName');",
							"    pm.expect(user).to.have.property('lastName');",
							"    pm.expect(user).to.have.property('email');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Update User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"isActive\": true\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user/{{userId}}",
					"host": ["{{baseUrl}}"],
					"path": ["user", "{{userId}}"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('User updated', function () {",
							"    const user = pm.response.json();",
							"    pm.expect(user.firstName).to.eql('John Updated');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Assign Role to User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/{{userId}}/role/{{roleId}}",
					"host": ["{{baseUrl}}"],
					"path": ["user", "{{userId}}", "role", "{{roleId}}"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Remove Role from User",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/{{userId}}/role/{{roleId}}",
					"host": ["{{baseUrl}}"],
					"path": ["user", "{{userId}}", "role", "{{roleId}}"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Delete User",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/{{userId}}",
					"host": ["{{baseUrl}}"],
					"path": ["user", "{{userId}}"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		}
	]
}
