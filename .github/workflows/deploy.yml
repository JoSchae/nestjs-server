name: create and push docker images

on:
    push:
        branches:
            - main
            - dev

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                platform: [amd64, arm64]
        env:
            TAG: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
            ARM_TAG: ${{ github.ref == 'refs/heads/main' && 'arm-prod' || 'arm-dev' }}
            PLATFORM_TAG: ${{ matrix.platform == 'arm64' && (github.ref == 'refs/heads/main' && 'arm-prod' || 'arm-dev') || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up QEMU for cross-platform builds
              uses: docker/setup-qemu-action@v3
              with:
                  platforms: linux/amd64,linux/arm64

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                  platforms: linux/amd64,linux/arm64

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Generate environment file
              run: |
                  cat << EOF > .env
                  NODE_ENV=${{ env.TAG }}
                  SERVER_PORT=3000
                  MONGO_DB_PORT=27017
                  MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }}
                  MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}
                  MONGO_DB_HOSTNAME=mongodb
                  MONGO_DB_DATABASE=${{ secrets.MONGO_DB_DATABASE }}
                  MONGO_DB_ADMIN_USERNAME=${{ secrets.MONGO_DB_ADMIN_USERNAME }}
                  MONGO_DB_ADMINUSER_PASSWORD=${{ secrets.MONGO_DB_ADMINUSER_PASSWORD }}
                  MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
                  MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
                  MONGO_DB_METRICS_USERNAME=${{ secrets.MONGO_DB_METRICS_USERNAME }}
                  MONGO_DB_METRICS_PASSWORD=${{ secrets.MONGO_DB_METRICS_PASSWORD }}
                  JWT_SECRET=${{ secrets.JWT_SECRET }}
                  JWT_EXPIRATION=3600s
                  EOF

            - name: Clear Docker system cache
              run: |
                  docker system prune -af
                  docker builder prune -af

            - name: Build and push Docker images for ${{ matrix.platform }}
              env:
                  NODE_ENV: ${{ env.TAG }}
                  DOCKER_BUILDKIT: 1
                  PLATFORM: linux/${{ matrix.platform }}
                  IMAGE_TAG: ${{ env.PLATFORM_TAG }}
              run: |
                  # Set platform-specific environment variables
                  export PLATFORM_ARCH=${{ matrix.platform }}
                  export TARGET_TAG=${{ env.PLATFORM_TAG }}
                  
                  # Force remove any existing images with same tags
                  docker compose -f docker-compose.yml -f docker-compose.${{ env.TAG }}.yml down --rmi all || true

                  # Build for specific platform with custom tags
                  docker buildx build \
                    --platform linux/${{ matrix.platform }} \
                    --build-arg NODE_ENV=${{ env.TAG }} \
                    --tag ${{ secrets.DOCKER_USERNAME }}/nestjs-server:${{ env.PLATFORM_TAG }} \
                    --file dockerfiles/nestjs/Dockerfile \
                    --push \
                    .

                  docker buildx build \
                    --platform linux/${{ matrix.platform }} \
                    --tag ${{ secrets.DOCKER_USERNAME }}/mongodb:${{ env.PLATFORM_TAG }} \
                    --file dockerfiles/mongodb/Dockerfile \
                    --push \
                    .

                  docker buildx build \
                    --platform linux/${{ matrix.platform }} \
                    --tag ${{ secrets.DOCKER_USERNAME }}/nginx:${{ env.PLATFORM_TAG }} \
                    --file dockerfiles/nginx/Dockerfile \
                    --push \
                    .
