services:
    nestjs:
        image: johannesschaefer/nestjs:${TAG:-dev}
        build:
            context: .
            dockerfile: ./dockerfiles/nestjs/Dockerfile
            target: dev
            args:
                - NODE_ENV=dev
        command: npm run start:debug
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        container_name: nestjs
        env_file:
            - .env.local
        depends_on:
            mongodb:
                condition: service_healthy
        networks:
            - app-network

    mongodb:
        image: johannesschaefer/mongo:${TAG:-dev}
        build:
            context: .
            dockerfile: ./dockerfiles/mongodb/Dockerfile
        container_name: mongodb
        env_file:
            - .env.local
        volumes:
            - mongodb_data:/data/db/
            - mongodb_log:/var/log/mongodb/
            - ./mongo:/docker-entrypoint-initdb.d:ro
        networks:
            - app-network
        healthcheck:
            test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

    nginx:
        image: johannesschaefer/nginx:${TAG:-dev}
        build:
            context: .
            dockerfile: ./dockerfiles/nginx/Dockerfile
            args:
                - NODE_ENV=dev
        container_name: nginx
        depends_on:
            - nestjs
        networks:
            - app-network

    mongodb-exporter:
        image: percona/mongodb_exporter:0.47.1
        container_name: mongodb-exporter
        env_file:
            - .env.local
        environment:
            - MONGODB_URI=mongodb://${MONGO_DB_METRICS_USERNAME}:${MONGO_DB_METRICS_PASSWORD}@${MONGO_DB_HOSTNAME}:${MONGO_DB_PORT}/${MONGO_DB_DATABASE}?authSource=admin
        ports:
            - '9216:9216'
        depends_on:
            - mongodb
        networks:
            - app-network

volumes:
    mongodb_data:
    mongodb_log:

networks:
    app-network:
        driver: bridge
