services:
    nestjs:
        image: johannesschaefer/nestjs:${TAG:-dev}
        build:
            context: .
            dockerfile: ./dockerfiles/nestjs/Dockerfile
            target: development
            args:
                - NODE_ENV=development
        command: npm run start:debug
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        container_name: nestjs
        ports:
            - 3000:3000
            - 9229:9229
        env_file:
            - .env
        depends_on:
            mongodb:
                condition: service_healthy
        networks:
            - app-network

    mongodb:
        image: johannesschaefer/mongo:${TAG:-dev}
        build:
            context: .
            dockerfile: ./dockerfiles/mongodb/Dockerfile
        container_name: mongodb
        env_file:
            - .env
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
            - MONGO_INITDB_DATABASE=${MONGO_DB_DATABASE}
        volumes:
            - mongodb_data:/data/db/
            - mongodb_log:/var/log/mongodb/
            - ./mongo:/docker-entrypoint-initdb.d:ro
        ports:
            - '27017:27017'
        networks:
            - app-network

    nginx:
        image: johannesschaefer/nginx:${TAG:-dev}
        build:
            context: .
            dockerfile: ./dockerfiles/nginx/Dockerfile
        container_name: nginx
        ports:
            - '80:80'
            - '443:443'
        depends_on:
            - nestjs
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        networks:
            - app-network

    cloudflare-ddns:
        image: johannesschaefer/cloudflare-ddns:${TAG:-dev}
        build:
            context: .
            dockerfile: ./dockerfiles/cloudflare-ddns/Dockerfile
            args:
                - CLOUDFLARE_APIKEY=${CLOUDFLARE_APIKEY}
        container_name: cloudflare-ddns
        restart: always
        environment:
            - ZONE=schaeferdevelopment.tech
            - PROXIED=true
            - PUID=1000
            - PGID=1000
        networks:
            - app-network

volumes:
    mongodb_data:
    mongodb_log:

networks:
    app-network:
        driver: bridge
