error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    upstream backend {
        server nestjs:3000;
    }

    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        access_log /var/log/nginx/schaeferdevelopment.tech.access.log;
        error_log /var/log/nginx/schaeferdevelopment.tech.error.log warn;
    }
}


# # nginx.prod.conf
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;

# events {
#     worker_connections  1024;
# }

# http {

#     sendfile on;
#     tcp_nopush on;
#     tcp_nodelay on;
#     keepalive_timeout 65;
#     types_hash_max_size 2048;
#     client_max_body_size 16M;
#     default_type  application/octet-stream;

#     add_header Strict-Transport-Security "max-age=63072000" always;
#     add_header Referrer-Policy "no-referrer-when-downgrade" always;

#     gzip on;
#     gzip_vary on;
#     gzip_proxied any;
#     gzip_comp_level 6;
#     gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

#     upstream backend {
#         server nestjs:3000;
#     }

#     server {
#         listen 443 ssl http2;
#         listen [::]:443 ssl http2;
#         server_name schaeferdevelopment.tech;

#         ssl_certificate /etc/letsencrypt/live/schaeferdevelopment.tech/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/schaeferdevelopment.tech/privkey.pem;

#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
#         ssl_prefer_server_ciphers off;
#         ssl_session_timeout 1d;
#         ssl_session_cache shared:SSL:50m;
#         ssl_session_tickets off;

#         # Security headers
#         add_header X-Frame-Options "SAMEORIGIN" always;
#         add_header X-Content-Type-Options "nosniff" always;
#         add_header X-XSS-Protection "1; mode=block";

#         location / {
#             proxy_pass http://backend;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_cache_bypass $http_upgrade;
#         }

#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root /usr/share/nginx/html;
#         }

#         access_log /var/log/nginx/schaeferdevelopment.tech.access.log;
#         error_log /var/log/nginx/schaeferdevelopment.tech.error.log warn;
#     }

#     # Redirect HTTP to HTTPS
#     server {
#         listen 80;
#         listen [::]:80;
#         server_name schaeferdevelopment.tech;
#         return 301 https://$server_name$request_uri;
#     }
# }

# # user  nginx;
# # worker_processes  1;

# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;

# events {
#     worker_connections  1024;
# }

# http {

#     upstream backend {
#         server nestjs:3000;
#     }
#     server {
#         listen 443;
#         server_name _;

#         location / {
#             proxy_pass http://backend;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }

#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root /usr/share/nginx/html;
#         }

#         # Logging
#     access_log /var/log/nginx/app.example.com.access.log;
#     error_log /var/log/nginx/app.example.com.error.log warn;
#     }
# }

